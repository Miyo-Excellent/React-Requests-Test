////////////////////////////////////////////////////////////////////////////////////////////////////
/***************************************Dependencies**********************************************/
//import mongoose from 'mongoose';
// import open from 'open';

/***************************************Middlewares**********************************************/

/****************************************Webpack***********************************************/

/***************************************Express app*******************************************/
import app from './serverAPP';

/******************************************Routes*********************************************/
// import routes from './routes';

/******************************************API************************************************/

/**************************************Client Render******************************************/

/**********************************Server Configuration***************************************/

/*****************************************Utils***********************************************/

////////////////////////////////////////////////////////////////////////////////////////////////////
/**********************************Variables de Entorno*******************************************/

// Deployment
const isDeployment = process.env.DEPLOYMENT === 'true';

// Analyzer
const isAnalyzer = process.env.ANALIZER === 'true';

// Server Port
const port = isDeployment ? 80 : process.env.NODE_PORT || 8080;

////////////////////////////////////////////////////////////////////////////////////////////////////

// Causes problems with REACT-REDUX. only use for files that do not use REACT-REDUX.
// GZip Compression just for Production
// if (!isDevelopment) {
//   app.get(/vendor\.bundle\.js$/, (req, res, next) => {
//     req.url = `${req.url}.gz`;
//     res.set('Content-Encoding', 'gzip');
//     next();
//   });
// }

////////////////////////////////////////////////////////////////////////////////////////////////////

app.listen(port, err => { // Listening
  if (!err && !isAnalyzer) {

    // open(`http://localhost:${port}`);

    console.log(`
    ${process.env.NODE_ENV}
    ${process.env.NODE_PORT}
    ${process.env.BABEL_ENV}
    ============================================================================================================================
    |·─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─·─··─··─·|
    |·─ Aplicación corriendo en: ==>  http://localhost:${port}  <== Abrir enlace con (Ctrl + Clic) en Windows, Linux, MAC ─··─·|
    |·─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─·─··─··─·|
    ============================================================================================================================
    `);
  }
});

/*

// Data Base Connection
mongoose.connect(DBConfig.db, err => {
  if (err) {
    // manda a imprimir en consola
    console.log(`Error al conectar a la base de datos ${err}`);
  }

  app.listen(port, err => { // Listening
    if (!err && !isAnalyzer) {

      // open(`http://localhost:${port}`);

      console.log(`
      ============================================================================================================================
      |·─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─·─··─··─·|
      |·─ Aplicación corriendo en: ==>  http://localhost:${port}  <== Abrir enlace con (Ctrl + Clic) en Windows, Linux, MAC ─··─·|
      |·─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─··─·─··─··─·|
      ============================================================================================================================
      `);
    }
  });
});

*/
